"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.doInstall = doInstall;
exports.install = install;
require("source-map-support/register");
var _support = require("@appium/support");
var _storageClient = _interopRequireDefault(require("./storage-client"));
var _utils = require("./utils");
const DOWNLOAD_TIMEOUT_MS = 15 * 1000;
const LATEST_VERSION = 'LATEST';
async function formatCdVersion(ver) {
  return ver === LATEST_VERSION ? (await (0, _utils.retrieveData)(`${_utils.CD_CDN}/LATEST_RELEASE`, {
    'user-agent': 'appium',
    accept: '*/*'
  }, {
    timeout: DOWNLOAD_TIMEOUT_MS
  })).trim() : ver;
}
async function prepareChromedriverDir(platformName) {
  const chromedriverDir = (0, _utils.getChromedriverDir)(platformName);
  if (!(await _support.fs.exists(chromedriverDir))) {
    await (0, _support.mkdirp)(chromedriverDir);
  }
  return chromedriverDir;
}
async function install() {
  const osInfo = await (0, _utils.getOsInfo)();
  const client = new _storageClient.default({
    chromedriverDir: await prepareChromedriverDir(osInfo.name)
  });
  await client.syncDrivers({
    osInfo,
    versions: [await formatCdVersion(_utils.CD_VER)]
  });
}
async function doInstall() {
  await install();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJET1dOTE9BRF9USU1FT1VUX01TIiwiTEFURVNUX1ZFUlNJT04iLCJmb3JtYXRDZFZlcnNpb24iLCJ2ZXIiLCJyZXRyaWV2ZURhdGEiLCJDRF9DRE4iLCJhY2NlcHQiLCJ0aW1lb3V0IiwidHJpbSIsInByZXBhcmVDaHJvbWVkcml2ZXJEaXIiLCJwbGF0Zm9ybU5hbWUiLCJjaHJvbWVkcml2ZXJEaXIiLCJnZXRDaHJvbWVkcml2ZXJEaXIiLCJmcyIsImV4aXN0cyIsIm1rZGlycCIsImluc3RhbGwiLCJvc0luZm8iLCJnZXRPc0luZm8iLCJjbGllbnQiLCJDaHJvbWVkcml2ZXJTdG9yYWdlQ2xpZW50IiwibmFtZSIsInN5bmNEcml2ZXJzIiwidmVyc2lvbnMiLCJDRF9WRVIiLCJkb0luc3RhbGwiXSwic291cmNlcyI6WyIuLi8uLi9saWIvaW5zdGFsbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcywgbWtkaXJwIH0gZnJvbSAnQGFwcGl1bS9zdXBwb3J0JztcbmltcG9ydCBDaHJvbWVkcml2ZXJTdG9yYWdlQ2xpZW50IGZyb20gJy4vc3RvcmFnZS1jbGllbnQnO1xuaW1wb3J0IHtcbiAgQ0RfQ0ROLCBDRF9WRVIsIHJldHJpZXZlRGF0YSwgZ2V0T3NJbmZvLCBnZXRDaHJvbWVkcml2ZXJEaXIsXG59IGZyb20gJy4vdXRpbHMnO1xuXG5cbmNvbnN0IERPV05MT0FEX1RJTUVPVVRfTVMgPSAxNSAqIDEwMDA7XG5jb25zdCBMQVRFU1RfVkVSU0lPTiA9ICdMQVRFU1QnO1xuXG5hc3luYyBmdW5jdGlvbiBmb3JtYXRDZFZlcnNpb24gKHZlcikge1xuICByZXR1cm4gdmVyID09PSBMQVRFU1RfVkVSU0lPTlxuICAgID8gKGF3YWl0IHJldHJpZXZlRGF0YShgJHtDRF9DRE59L0xBVEVTVF9SRUxFQVNFYCwge1xuICAgICAgJ3VzZXItYWdlbnQnOiAnYXBwaXVtJyxcbiAgICAgIGFjY2VwdDogJyovKicsXG4gICAgfSwgeyB0aW1lb3V0OiBET1dOTE9BRF9USU1FT1VUX01TIH0pKS50cmltKClcbiAgICA6IHZlcjtcbn1cblxuYXN5bmMgZnVuY3Rpb24gcHJlcGFyZUNocm9tZWRyaXZlckRpciAocGxhdGZvcm1OYW1lKSB7XG4gIGNvbnN0IGNocm9tZWRyaXZlckRpciA9IGdldENocm9tZWRyaXZlckRpcihwbGF0Zm9ybU5hbWUpO1xuICBpZiAoIWF3YWl0IGZzLmV4aXN0cyhjaHJvbWVkcml2ZXJEaXIpKSB7XG4gICAgYXdhaXQgbWtkaXJwKGNocm9tZWRyaXZlckRpcik7XG4gIH1cbiAgcmV0dXJuIGNocm9tZWRyaXZlckRpcjtcbn1cblxuYXN5bmMgZnVuY3Rpb24gaW5zdGFsbCAoKSB7XG4gIGNvbnN0IG9zSW5mbyA9IGF3YWl0IGdldE9zSW5mbygpO1xuICBjb25zdCBjbGllbnQgPSBuZXcgQ2hyb21lZHJpdmVyU3RvcmFnZUNsaWVudCh7XG4gICAgY2hyb21lZHJpdmVyRGlyOiBhd2FpdCBwcmVwYXJlQ2hyb21lZHJpdmVyRGlyKG9zSW5mby5uYW1lKSxcbiAgfSk7XG4gIGF3YWl0IGNsaWVudC5zeW5jRHJpdmVycyh7XG4gICAgb3NJbmZvLFxuICAgIHZlcnNpb25zOiBbYXdhaXQgZm9ybWF0Q2RWZXJzaW9uKENEX1ZFUildLFxuICB9KTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZG9JbnN0YWxsICgpIHtcbiAgYXdhaXQgaW5zdGFsbCgpO1xufVxuXG5leHBvcnQgeyBpbnN0YWxsLCBkb0luc3RhbGwgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBS0EsTUFBTUEsbUJBQW1CLEdBQUcsRUFBRSxHQUFHLElBQUk7QUFDckMsTUFBTUMsY0FBYyxHQUFHLFFBQVE7QUFFL0IsZUFBZUMsZUFBZSxDQUFFQyxHQUFHLEVBQUU7RUFDbkMsT0FBT0EsR0FBRyxLQUFLRixjQUFjLEdBQ3pCLENBQUMsTUFBTSxJQUFBRyxtQkFBWSxFQUFFLEdBQUVDLGFBQU8saUJBQWdCLEVBQUU7SUFDaEQsWUFBWSxFQUFFLFFBQVE7SUFDdEJDLE1BQU0sRUFBRTtFQUNWLENBQUMsRUFBRTtJQUFFQyxPQUFPLEVBQUVQO0VBQW9CLENBQUMsQ0FBQyxFQUFFUSxJQUFJLEVBQUUsR0FDMUNMLEdBQUc7QUFDVDtBQUVBLGVBQWVNLHNCQUFzQixDQUFFQyxZQUFZLEVBQUU7RUFDbkQsTUFBTUMsZUFBZSxHQUFHLElBQUFDLHlCQUFrQixFQUFDRixZQUFZLENBQUM7RUFDeEQsSUFBSSxFQUFDLE1BQU1HLFdBQUUsQ0FBQ0MsTUFBTSxDQUFDSCxlQUFlLENBQUMsR0FBRTtJQUNyQyxNQUFNLElBQUFJLGVBQU0sRUFBQ0osZUFBZSxDQUFDO0VBQy9CO0VBQ0EsT0FBT0EsZUFBZTtBQUN4QjtBQUVBLGVBQWVLLE9BQU8sR0FBSTtFQUN4QixNQUFNQyxNQUFNLEdBQUcsTUFBTSxJQUFBQyxnQkFBUyxHQUFFO0VBQ2hDLE1BQU1DLE1BQU0sR0FBRyxJQUFJQyxzQkFBeUIsQ0FBQztJQUMzQ1QsZUFBZSxFQUFFLE1BQU1GLHNCQUFzQixDQUFDUSxNQUFNLENBQUNJLElBQUk7RUFDM0QsQ0FBQyxDQUFDO0VBQ0YsTUFBTUYsTUFBTSxDQUFDRyxXQUFXLENBQUM7SUFDdkJMLE1BQU07SUFDTk0sUUFBUSxFQUFFLENBQUMsTUFBTXJCLGVBQWUsQ0FBQ3NCLGFBQU0sQ0FBQztFQUMxQyxDQUFDLENBQUM7QUFDSjtBQUVBLGVBQWVDLFNBQVMsR0FBSTtFQUMxQixNQUFNVCxPQUFPLEVBQUU7QUFDakIifQ==