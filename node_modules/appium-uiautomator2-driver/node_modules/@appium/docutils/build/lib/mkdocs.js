"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mkdocsServe = exports.mkdocsBuild = exports.verifyMkdocs = void 0;
const teen_process_1 = require("teen_process");
const MKDOCS_VER_STR = 'version 1.';
/**
 * Run a version check on the system-installed mkdocs to make sure it is set up
 */
async function verifyMkdocs() {
    try {
        const { stdout } = await (0, teen_process_1.exec)('mkdocs', ['-V']);
        if (!stdout.includes(MKDOCS_VER_STR)) {
            throw new Error('version mismatch');
        }
    }
    catch (err) {
        throw new Error(`Could not verify mkdocs 1.x is available. Make sure it's installed ` +
            `and on your path. Specific error: ${err}`);
    }
}
exports.verifyMkdocs = verifyMkdocs;
/**
 * Run 'mkdocs build' on a project
 *
 * @param {string} configPath path to mkdocs config yml
 * @param {string} outputDir directory mkdocs should build into
 * @param {?string} theme theme name
 */
async function mkdocsBuild(configPath, outputDir, theme = 'mkdocs') {
    await verifyMkdocs();
    await (0, teen_process_1.exec)('mkdocs', ['build', '-f', configPath, '-t', theme, '-d', outputDir]);
}
exports.mkdocsBuild = mkdocsBuild;
/**
 * Run 'mkdocs serve' on a project
 *
 * @param {string} configPath path to mkdocs config yml
 */
async function mkdocsServe(configPath) {
    await verifyMkdocs();
    const proc = new teen_process_1.SubProcess('mkdocs', ['serve', '-f', configPath]);
    await proc.start();
}
exports.mkdocsServe = mkdocsServe;
//# sourceMappingURL=mkdocs.js.map