export type AppiumServer = import('@appium/types').AppiumServer;
/**
 * Adds websocket handler to express server instance.
 * It is expected this function is called in Express
 * server instance context.
 *
 * @this {AppiumServer} - An instance of express HTTP server.
 * @param {string} handlerPathname - Web socket endpoint path starting with
 * a single slash character. It is recommended to always add
 * DEFAULT_WS_PATHNAME_PREFIX to all web socket pathnames.
 * @param {import('ws').Server} handlerServer - WebSocket server instance. See
 * https://github.com/websockets/ws/pull/885 for more details
 * on how to configure the handler properly.
 * @returns {Promise<void>}
 */
export function addWebSocketHandler(this: import("@appium/types").AppiumServer, handlerPathname: string, handlerServer: import('ws').Server): Promise<void>;
/**
 * Removes existing websocket handler from express server instance.
 * The call is ignored if the given `handlerPathname` handler
 * is not present in the handlers list.
 * It is expected this function is called in Express
 * server instance context.
 * @this {AppiumServer}
 * @param {string} handlerPathname - Websocket endpoint path.
 * @returns {Promise<boolean>} true if the handlerPathname was found and deleted
 */
export function removeWebSocketHandler(this: import("@appium/types").AppiumServer, handlerPathname: string): Promise<boolean>;
/**
 * Removes all existing websocket handler from express server instance.
 * It is expected this function is called in Express
 * server instance context.
 * @this {AppiumServer}
 * @returns {Promise<boolean>} true if at least one handler has been deleted
 */
export function removeAllWebSocketHandlers(this: import("@appium/types").AppiumServer): Promise<boolean>;
/**
 * Returns web socket handlers registered for the given server
 * instance.
 * It is expected this function is called in Express
 * server instance context.
 *
 * @this {AppiumServer}
 * @param {string?} [keysFilter] - Only include pathnames with given
 * `keysFilter` value if set. All pairs will be included by default.
 * @returns {Promise<Record<string, import('ws').Server>>} pathnames to websocket server instances mapping matching the search criteria or an empty object otherwise.
 */
export function getWebSocketHandlers(this: import("@appium/types").AppiumServer, keysFilter?: string | null | undefined): Promise<Record<string, import('ws').Server>>;
export const DEFAULT_WS_PATHNAME_PREFIX: "/ws";
//# sourceMappingURL=websocket.d.ts.map