#!/usr/bin/env node
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.webviewHelpers = exports.default = exports.commonCapConstraints = exports.androidHelpers = exports.androidCommands = exports.WEBVIEW_WIN = exports.WEBVIEW_BASE = exports.SETTINGS_HELPER_PKG_ID = exports.NATIVE_WIN = exports.CHROMIUM_WIN = exports.AndroidDriver = void 0;
require("source-map-support/register");
var driver = _interopRequireWildcard(require("./lib/driver"));
var androidHelperIndex = _interopRequireWildcard(require("./lib/android-helpers"));
var commandIndex = _interopRequireWildcard(require("./lib/commands/index"));
var webview = _interopRequireWildcard(require("./lib/webview-helpers"));
var caps = _interopRequireWildcard(require("./lib/desired-caps"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const {
  AndroidDriver
} = driver;
exports.AndroidDriver = AndroidDriver;
const {
  helpers: webviewHelpers,
  NATIVE_WIN,
  WEBVIEW_WIN,
  WEBVIEW_BASE,
  CHROMIUM_WIN
} = webview;
exports.CHROMIUM_WIN = CHROMIUM_WIN;
exports.WEBVIEW_BASE = WEBVIEW_BASE;
exports.WEBVIEW_WIN = WEBVIEW_WIN;
exports.NATIVE_WIN = NATIVE_WIN;
exports.webviewHelpers = webviewHelpers;
const {
  commonCapConstraints
} = caps;
exports.commonCapConstraints = commonCapConstraints;
const {
  commands: androidCommands
} = commandIndex;
exports.androidCommands = androidCommands;
const {
  helpers: androidHelpers,
  SETTINGS_HELPER_PKG_ID
} = androidHelperIndex;
exports.SETTINGS_HELPER_PKG_ID = SETTINGS_HELPER_PKG_ID;
exports.androidHelpers = androidHelpers;
var _default = AndroidDriver;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBbmRyb2lkRHJpdmVyIiwiZHJpdmVyIiwiaGVscGVycyIsIndlYnZpZXdIZWxwZXJzIiwiTkFUSVZFX1dJTiIsIldFQlZJRVdfV0lOIiwiV0VCVklFV19CQVNFIiwiQ0hST01JVU1fV0lOIiwid2VidmlldyIsImNvbW1vbkNhcENvbnN0cmFpbnRzIiwiY2FwcyIsImNvbW1hbmRzIiwiYW5kcm9pZENvbW1hbmRzIiwiY29tbWFuZEluZGV4IiwiYW5kcm9pZEhlbHBlcnMiLCJTRVRUSU5HU19IRUxQRVJfUEtHX0lEIiwiYW5kcm9pZEhlbHBlckluZGV4Il0sInNvdXJjZXMiOlsiLi4vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuLy8gdHJhbnNwaWxlOm1haW5cbmltcG9ydCAqIGFzIGRyaXZlciBmcm9tICcuL2xpYi9kcml2ZXInO1xuaW1wb3J0ICogYXMgYW5kcm9pZEhlbHBlckluZGV4IGZyb20gJy4vbGliL2FuZHJvaWQtaGVscGVycyc7XG5pbXBvcnQgKiBhcyBjb21tYW5kSW5kZXggZnJvbSAnLi9saWIvY29tbWFuZHMvaW5kZXgnO1xuaW1wb3J0ICogYXMgd2VidmlldyBmcm9tICcuL2xpYi93ZWJ2aWV3LWhlbHBlcnMnO1xuaW1wb3J0ICogYXMgY2FwcyBmcm9tICcuL2xpYi9kZXNpcmVkLWNhcHMnO1xuXG5jb25zdCB7IEFuZHJvaWREcml2ZXIgfSA9IGRyaXZlcjtcbmNvbnN0IHsgaGVscGVyczogd2Vidmlld0hlbHBlcnMsIE5BVElWRV9XSU4sIFdFQlZJRVdfV0lOLCBXRUJWSUVXX0JBU0UsXG4gICAgICAgIENIUk9NSVVNX1dJTiB9ID0gd2VidmlldztcbmNvbnN0IHsgY29tbW9uQ2FwQ29uc3RyYWludHMgfSA9IGNhcHM7XG5jb25zdCB7IGNvbW1hbmRzOiBhbmRyb2lkQ29tbWFuZHMgfSA9IGNvbW1hbmRJbmRleDtcbmNvbnN0IHsgaGVscGVyczogYW5kcm9pZEhlbHBlcnMsIFNFVFRJTkdTX0hFTFBFUl9QS0dfSUQgfSA9IGFuZHJvaWRIZWxwZXJJbmRleDtcblxuXG5leHBvcnQgZGVmYXVsdCBBbmRyb2lkRHJpdmVyO1xuZXhwb3J0IHtcbiAgYW5kcm9pZEhlbHBlcnMsIGFuZHJvaWRDb21tYW5kcywgQW5kcm9pZERyaXZlcixcbiAgY29tbW9uQ2FwQ29uc3RyYWludHMsIHdlYnZpZXdIZWxwZXJzLCBOQVRJVkVfV0lOLCBXRUJWSUVXX1dJTixcbiAgV0VCVklFV19CQVNFLCBDSFJPTUlVTV9XSU4sIFNFVFRJTkdTX0hFTFBFUl9QS0dfSUQsXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFtQjs7QUFBQTtFQUFBO0FBQUE7QUFBQTtBQUFBO0FBRW5CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBMkM7QUFBQTtBQUUzQyxNQUFNO0VBQUVBO0FBQWMsQ0FBQyxHQUFHQyxNQUFNO0FBQUM7QUFDakMsTUFBTTtFQUFFQyxPQUFPLEVBQUVDLGNBQWM7RUFBRUMsVUFBVTtFQUFFQyxXQUFXO0VBQUVDLFlBQVk7RUFDOURDO0FBQWEsQ0FBQyxHQUFHQyxPQUFPO0FBQUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNqQyxNQUFNO0VBQUVDO0FBQXFCLENBQUMsR0FBR0MsSUFBSTtBQUFDO0FBQ3RDLE1BQU07RUFBRUMsUUFBUSxFQUFFQztBQUFnQixDQUFDLEdBQUdDLFlBQVk7QUFBQztBQUNuRCxNQUFNO0VBQUVYLE9BQU8sRUFBRVksY0FBYztFQUFFQztBQUF1QixDQUFDLEdBQUdDLGtCQUFrQjtBQUFDO0FBQUE7QUFBQSxlQUdoRWhCLGFBQWE7QUFBQSJ9