{"version":3,"file":"log.js","names":["GET_SERVER_LOGS_FEATURE","commands","helpers","extensions","WEBSOCKET_ENDPOINT","sessionId","DEFAULT_WS_PATHNAME_PREFIX","toLogRecord","timestamp","level","message","supportedLogTypes","logcat","description","getter","self","adb","getLogcatLogs","bugreport","output","Date","now","split","os","EOL","map","x","server","ensureFeatureEnabled","log","unwrap","record","_","isEmpty","prefix","mobileStartLogsBroadcast","pathname","getWebSocketHandlers","debug","info","JSON","stringify","address","wss","WebSocket","Server","noServer","on","ws","req","remoteIp","headers","connection","remoteAddress","_logcatWebsocketListener","logRecord","readyState","OPEN","send","setLogcatListener","code","reason","removeLogcatListener","ign","closeMsg","toString","addWebSocketHandler","mobileStopLogsBroadcast","removeWebSocketHandler","getLogTypes","nativeLogTypes","BaseDriver","prototype","call","isWebContext","webLogTypes","chromedriver","jwproxy","command","getLog","logType","keys","includes","type","Object","assign"],"sources":["../../../lib/commands/log.js"],"sourcesContent":["import log from '../logger';\nimport os from 'os';\nimport _ from 'lodash';\nimport WebSocket from 'ws';\nimport { DEFAULT_WS_PATHNAME_PREFIX, BaseDriver } from 'appium/driver';\n\nconst GET_SERVER_LOGS_FEATURE = 'get_server_logs';\n\nlet commands = {}, helpers = {}, extensions = {};\n\nconst WEBSOCKET_ENDPOINT = (sessionId) => `${DEFAULT_WS_PATHNAME_PREFIX}/session/${sessionId}/appium/device/logcat`;\n\n// https://github.com/SeleniumHQ/selenium/blob/0d425676b3c9df261dd641917f867d4d5ce7774d/java/client/src/org/openqa/selenium/logging/LogEntry.java\nfunction toLogRecord (timestamp, level, message) {\n  return {\n    timestamp,\n    level,\n    message,\n  };\n}\n\nextensions.supportedLogTypes = {\n  logcat: {\n    description: 'Logs for Android applications on real device and emulators via ADB',\n    getter: async (self) => await self.adb.getLogcatLogs(),\n  },\n  bugreport: {\n    description: `'adb bugreport' output for advanced issues diagnostic`,\n    getter: async (self) => {\n      const output = await self.adb.bugreport();\n      const timestamp = Date.now();\n      return output.split(os.EOL)\n        .map((x) => toLogRecord(timestamp, 'ALL', x));\n    },\n  },\n  server: {\n    description: 'Appium server logs',\n    getter: (self) => {\n      self.ensureFeatureEnabled(GET_SERVER_LOGS_FEATURE);\n      const timestamp = Date.now();\n      return log.unwrap().record\n        .map((x) => toLogRecord(timestamp,\n                                'ALL',\n                                _.isEmpty(x.prefix) ? x.message : `[${x.prefix}] ${x.message}`)\n        );\n    },\n  },\n};\n\n/**\n * Starts Android logcat broadcast websocket on the same host and port\n * where Appium server is running at `/ws/session/:sessionId:/appium/logcat` endpoint. The method\n * will return immediately if the web socket is already listening.\n *\n * Each connected websocket listener will receive logcat log lines\n * as soon as they are visible to Appium.\n */\ncommands.mobileStartLogsBroadcast = async function mobileStartLogsBroadcast () {\n  const pathname = WEBSOCKET_ENDPOINT(this.sessionId);\n  if (!_.isEmpty(await this.server.getWebSocketHandlers(pathname))) {\n    log.debug(`The logcat broadcasting web socket server is already listening at ${pathname}`);\n    return;\n  }\n\n  log.info(`Starting logcat broadcasting on web socket server ` +\n    `${JSON.stringify(this.server.address())} to ${pathname}`);\n  // https://github.com/websockets/ws/blob/master/doc/ws.md\n  const wss = new WebSocket.Server({\n    noServer: true,\n  });\n  wss.on('connection', (ws, req) => {\n    if (req) {\n      const remoteIp = _.isEmpty(req.headers['x-forwarded-for'])\n        ? req.connection?.remoteAddress\n        : req.headers['x-forwarded-for'];\n      log.debug(`Established a new logcat listener web socket connection from ${remoteIp}`);\n    } else {\n      log.debug('Established a new logcat listener web socket connection');\n    }\n\n    if (_.isEmpty(this._logcatWebsocketListener)) {\n      this._logcatWebsocketListener = (logRecord) => {\n        if (ws?.readyState === WebSocket.OPEN) {\n          ws.send(logRecord.message);\n        }\n      };\n    }\n    this.adb.setLogcatListener(this._logcatWebsocketListener);\n\n    ws.on('close', (code, reason) => {\n      if (!_.isEmpty(this._logcatWebsocketListener)) {\n        try {\n          this.adb.removeLogcatListener(this._logcatWebsocketListener);\n        } catch (ign) {}\n        this._logcatWebsocketListener = null;\n      }\n\n      let closeMsg = 'Logcat listener web socket is closed.';\n      if (!_.isEmpty(code)) {\n        closeMsg += ` Code: ${code}.`;\n      }\n      if (!_.isEmpty(reason)) {\n        closeMsg += ` Reason: ${reason.toString()}.`;\n      }\n      log.debug(closeMsg);\n    });\n  });\n  await this.server.addWebSocketHandler(pathname, wss);\n};\n\n/**\n * Stops the previously started logcat broadcasting wesocket server.\n * This method will return immediately if no server is running.\n */\ncommands.mobileStopLogsBroadcast = async function mobileStopLogsBroadcast () {\n  const pathname = WEBSOCKET_ENDPOINT(this.sessionId);\n  if (_.isEmpty(await this.server.getWebSocketHandlers(pathname))) {\n    return;\n  }\n\n  log.debug(`Stopping logcat broadcasting on web socket server ` +\n    `${JSON.stringify(this.server.address())} to ${pathname}`);\n  await this.server.removeWebSocketHandler(pathname);\n};\n\ncommands.getLogTypes = async function getLogTypes () {\n  const nativeLogTypes = await BaseDriver.prototype.getLogTypes.call(this);\n  if (this.isWebContext()) {\n    const webLogTypes = await this.chromedriver.jwproxy.command('/log/types', 'GET');\n    return [...nativeLogTypes, ...webLogTypes];\n  }\n  return nativeLogTypes;\n};\n\ncommands.getLog = async function getLog (logType) {\n  if (this.isWebContext() && !_.keys(this.supportedLogTypes).includes(logType)) {\n    return await this.chromedriver.jwproxy.command('/log', 'POST', {type: logType});\n  }\n  return await BaseDriver.prototype.getLog.call(this, logType);\n};\n\nObject.assign(extensions, commands, helpers);\nexport { commands, helpers };\nexport default extensions;\n"],"mappings":"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"}