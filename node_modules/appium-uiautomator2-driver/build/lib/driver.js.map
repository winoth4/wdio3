{"version":3,"file":"driver.js","names":["helpers","Object","assign","uiautomator2Helpers","androidHelpers","DEVICE_PORT_RANGE","DEVICE_PORT_ALLOCATION_GUARD","util","getLockFileGuard","path","resolve","os","tmpdir","timeout","tryRecovery","DEVICE_PORT","MJPEG_SERVER_DEVICE_PORT","LOCALHOST_IP4","NO_PROXY","RegExp","CHROME_NO_PROXY","MEMOIZED_FUNCTIONS","AndroidUiautomator2Driver","BaseDriver","newMethodMap","constructor","opts","shouldValidateCaps","shell","locatorStrategies","desiredCapConstraints","uiautomator2","jwpProxyActive","defaultIME","jwpProxyAvoid","apkStrings","settings","DeviceSettings","ignoreUnimportantViews","allowInvisibleElements","onSettingsUpdate","bind","chromedriver","sessionChromedrivers","fn","_","memoize","validateDesiredCaps","caps","createSession","args","sessionId","serverDetails","platform","webStorageEnabled","takesScreenshot","javascriptEnabled","databaseEnabled","networkConnectionEnabled","locationContextEnabled","warnings","desired","curContext","defaultContextName","defaultOpts","fullReset","autoLaunch","adbPort","DEFAULT_ADB_PORT","androidInstallTimeout","defaults","isChromeSession","log","info","pkg","activity","getChromePkg","browserName","appPackage","appActivity","reboot","setAvdFromCapabilities","app","configureApp","APK_EXTENSION","APKS_EXTENSION","checkAppPresent","startUiAutomator2Session","fillDeviceDetails","mjpegScreenshotUrl","mjpegStream","mjpeg","MJpegStream","start","e","deleteSession","pixelRatio","getDevicePixelRatio","statBarHeight","getStatusBarHeight","viewportRect","getViewPortRect","driverData","getSession","sessionData","debug","uia2Data","jwproxy","command","isEmulator","adb","avd","deviceName","errorAndThrow","platformVersion","avdDevice","replace","allocateSystemPort","forwardPort","localPort","checkPortStatus","systemPort","_hasSystemPortInCaps","startPort","endPort","findAPortNotInUse","releaseSystemPort","removePortForward","allocateMjpegServerPort","mjpegServerPort","releaseMjpegServerPort","udid","emPort","getDeviceInfoFromCaps","createADB","apiLevel","getApiLevel","setHiddenApiPolicy","ignoreHiddenApiPolicyError","hasValue","gpsEnabled","toggleGPSLocationProvider","warn","appInfo","getLaunchInfo","curDeviceId","deviceUDID","initDevice","initUiAutomator2Server","disableWindowAnimation","isAnimationOn","setAnimationState","_wasWindowAnimationDisabled","initAUT","startSession","addDeviceInfoToCaps","skipUnlock","unlock","startChromeSession","ensureAppStarts","orientation","setOrientation","autoWebview","viewName","defaultWebviewName","autoWebviewTimeout","retryInterval","setContext","apiVersion","manufacturer","model","realDisplaySize","displayDensity","mobileGetDeviceInfo","deviceApiLevel","parseInt","deviceScreenSize","deviceScreenDensity","deviceModel","deviceManufacturer","uiautomator2Opts","host","remoteAdbHost","devicePort","apk","tmpDir","disableSuppressAccessibilityService","readTimeout","uiautomator2ServerReadTimeout","UiAutomator2Server","proxyReqRes","proxyCommand","skipServerInstallation","installServerApk","uiautomator2ServerInstallTimeout","addToDeviceIdleWhitelist","SETTINGS_HELPER_PKG_ID","SERVER_PACKAGE_ID","SERVER_TEST_PACKAGE_ID","stderr","message","uninstallOtherPackages","parseArray","otherApps","B","all","map","installOtherApks","noReset","isAppInstalled","noSign","checkApkCert","requireDefaultCert","signApp","skipUninstall","uninstallApk","installApk","fastReset","resetApp","appWaitPackage","appWaitActivity","androidCoverage","forceAppLaunch","processExists","startApp","action","intentAction","category","intentCategory","flags","intentFlags","waitPkg","waitActivity","waitForLaunch","appWaitForLaunch","waitDuration","appWaitDuration","optionalIntentArguments","stopApp","dontStopAppOnReset","retry","user","userProfile","screenRecordingStopTasks","isEmpty","_screenRecordingProperties","stopRecordingScreen","mobileIsMediaProjectionRecordingRunning","mobileStopMediaProjectionRecording","_screenStreamingProps","mobileStopScreenStreaming","removeAllSessionWebSocketHandlers","server","stopChromedriverProxies","err","task","ign","unicodeKeyboard","resetKeyboard","setIME","endAndroidCoverage","androidCoverageEndIntent","broadcast","forceStop","stopLogcat","error","setDefaultHiddenApiPolicy","avdName","killEmulator","stop","fs","exists","wrapBootstrapDisconnect","wrapped","restart","proxyActive","canProxy","getProxyAvoidList","nativeWebScreenshot","isChromeBrowser","cmd","toPairs","androidCommands","prototype","commands"],"sources":["../../lib/driver.js"],"sourcesContent":["import _ from 'lodash';\nimport { BaseDriver, DeviceSettings } from 'appium/driver';\nimport {\n  UiAutomator2Server, SERVER_PACKAGE_ID, SERVER_TEST_PACKAGE_ID\n} from './uiautomator2';\nimport { newMethodMap } from './method-map';\nimport { fs, util, mjpeg } from 'appium/support';\nimport { retryInterval } from 'asyncbox';\nimport B from 'bluebird';\nimport commands from './commands/index';\nimport { DEFAULT_ADB_PORT } from 'appium-adb';\nimport uiautomator2Helpers from './helpers';\nimport { androidHelpers, androidCommands, SETTINGS_HELPER_PKG_ID, } from 'appium-android-driver';\nimport desiredCapConstraints from './desired-caps';\nimport { findAPortNotInUse, checkPortStatus } from 'portscanner';\nimport os from 'os';\nimport path from 'path';\nimport { APK_EXTENSION, APKS_EXTENSION } from './extensions';\n\n\nconst helpers = Object.assign({}, uiautomator2Helpers, androidHelpers);\n\n// The range of ports we can use on the system for communicating to the\n// UiAutomator2 HTTP server on the device\nconst DEVICE_PORT_RANGE = [8200, 8299];\n\n// The guard is needed to avoid dynamic system port allocation conflicts for\n// parallel driver sessions\nconst DEVICE_PORT_ALLOCATION_GUARD = util.getLockFileGuard(\n  path.resolve(os.tmpdir(), 'uia2_device_port_guard'),\n  {timeout: 25, tryRecovery: true}\n);\n\n// This is the port that UiAutomator2 listens to on the device. We will forward\n// one of the ports above on the system to this port on the device.\nconst DEVICE_PORT = 6790;\n// This is the port that the UiAutomator2 MJPEG server listens to on the device.\n// We will forward one of the ports above on the system to this port on the\n// device.\nconst MJPEG_SERVER_DEVICE_PORT = 7810;\n\nconst LOCALHOST_IP4 = '127.0.0.1';\n\n// NO_PROXY contains the paths that we never want to proxy to UiAutomator2 server.\n// TODO:  Add the list of paths that we never want to proxy to UiAutomator2 server.\n// TODO: Need to segregate the paths better way using regular expressions wherever applicable.\n// (Not segregating right away because more paths to be added in the NO_PROXY list)\nconst NO_PROXY = [\n  ['GET', new RegExp('^/session/(?!.*/)')],\n  ['GET', new RegExp('^/session/[^/]+/alert_[^/]+')],\n  ['GET', new RegExp('^/session/[^/]+/alert/[^/]+')],\n  ['GET', new RegExp('^/session/[^/]+/appium/[^/]+/current_activity')],\n  ['GET', new RegExp('^/session/[^/]+/appium/[^/]+/current_package')],\n  ['GET', new RegExp('^/session/[^/]+/appium/app/[^/]+')],\n  ['GET', new RegExp('^/session/[^/]+/appium/device/[^/]+')],\n  ['GET', new RegExp('^/session/[^/]+/appium/settings')],\n  ['GET', new RegExp('^/session/[^/]+/context')],\n  ['GET', new RegExp('^/session/[^/]+/contexts')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/attribute')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/displayed')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/enabled')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/location_in_view')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/name')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/screenshot')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/selected')],\n  ['GET', new RegExp('^/session/[^/]+/ime/[^/]+')],\n  ['GET', new RegExp('^/session/[^/]+/location')],\n  ['GET', new RegExp('^/session/[^/]+/network_connection')],\n  ['GET', new RegExp('^/session/[^/]+/screenshot')],\n  ['GET', new RegExp('^/session/[^/]+/timeouts')],\n  ['GET', new RegExp('^/session/[^/]+/url')],\n  ['POST', new RegExp('^/session/[^/]+/[^/]+_alert$')],\n  ['POST', new RegExp('^/session/[^/]+/actions')],\n  ['POST', new RegExp('^/session/[^/]+/alert/[^/]+')],\n  ['POST', new RegExp('^/session/[^/]+/app/[^/]')],\n  ['POST', new RegExp('^/session/[^/]+/appium/[^/]+/start_activity')],\n  ['POST', new RegExp('^/session/[^/]+/appium/app/[^/]+')],\n  ['POST', new RegExp('^/session/[^/]+/appium/compare_images')],\n  ['POST', new RegExp('^/session/[^/]+/appium/device/(?!set_clipboard)[^/]+')],\n  ['POST', new RegExp('^/session/[^/]+/appium/element/[^/]+/replace_value')],\n  ['POST', new RegExp('^/session/[^/]+/appium/element/[^/]+/value')],\n  ['POST', new RegExp('^/session/[^/]+/appium/getPerformanceData')],\n  ['POST', new RegExp('^/session/[^/]+/appium/performanceData/types')],\n  ['POST', new RegExp('^/session/[^/]+/appium/settings')],\n  ['POST', new RegExp('^/session/[^/]+/appium/execute_driver')],\n  ['POST', new RegExp('^/session/[^/]+/appium/start_recording_screen')],\n  ['POST', new RegExp('^/session/[^/]+/appium/stop_recording_screen')],\n  ['POST', new RegExp('^/session/[^/]+/appium/.*event')],\n  ['POST', new RegExp('^/session/[^/]+/context')],\n  ['POST', new RegExp('^/session/[^/]+/element')],\n  ['POST', new RegExp('^/session/[^/]+/ime/[^/]+')],\n  ['POST', new RegExp('^/session/[^/]+/keys')],\n  ['POST', new RegExp('^/session/[^/]+/location')],\n  ['POST', new RegExp('^/session/[^/]+/network_connection')],\n  ['POST', new RegExp('^/session/[^/]+/timeouts')],\n  ['POST', new RegExp('^/session/[^/]+/touch/multi/perform')],\n  ['POST', new RegExp('^/session/[^/]+/touch/perform')],\n  ['POST', new RegExp('^/session/[^/]+/url')],\n\n  // MJSONWP commands\n  ['GET', new RegExp('^/session/[^/]+/log/types')],\n  ['POST', new RegExp('^/session/[^/]+/execute')],\n  ['POST', new RegExp('^/session/[^/]+/execute_async')],\n  ['POST', new RegExp('^/session/[^/]+/log')],\n  // W3C commands\n  // For Selenium v4 (W3C does not have this route)\n  ['GET', new RegExp('^/session/[^/]+/se/log/types')],\n  ['GET', new RegExp('^/session/[^/]+/window/rect')],\n  ['POST', new RegExp('^/session/[^/]+/execute/async')],\n  ['POST', new RegExp('^/session/[^/]+/execute/sync')],\n  // For Selenium v4 (W3C does not have this route)\n  ['POST', new RegExp('^/session/[^/]+/se/log')],\n];\n\n// This is a set of methods and paths that we never want to proxy to Chromedriver.\nconst CHROME_NO_PROXY = [\n  ['GET', new RegExp('^/session/[^/]+/appium')],\n  ['GET', new RegExp('^/session/[^/]+/context')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/rect')],\n  ['GET', new RegExp('^/session/[^/]+/orientation')],\n  ['POST', new RegExp('^/session/[^/]+/appium')],\n  ['POST', new RegExp('^/session/[^/]+/context')],\n  ['POST', new RegExp('^/session/[^/]+/orientation')],\n  ['POST', new RegExp('^/session/[^/]+/touch/multi/perform')],\n  ['POST', new RegExp('^/session/[^/]+/touch/perform')],\n\n  // this is needed to make the mobile: commands working in web context\n  ['POST', new RegExp('^/session/[^/]+/execute$')],\n  ['POST', new RegExp('^/session/[^/]+/execute/sync')],\n\n  // MJSONWP commands\n  ['GET', new RegExp('^/session/[^/]+/log/types$')],\n  ['POST', new RegExp('^/session/[^/]+/log$')],\n  // W3C commands\n  // For Selenium v4 (W3C does not have this route)\n  ['GET', new RegExp('^/session/[^/]+/se/log/types$')],\n  // For Selenium v4 (W3C does not have this route)\n  ['POST', new RegExp('^/session/[^/]+/se/log$')],\n];\n\nconst MEMOIZED_FUNCTIONS = [\n  'getStatusBarHeight',\n  'getDevicePixelRatio',\n];\n\nclass AndroidUiautomator2Driver extends BaseDriver {\n\n  static newMethodMap = newMethodMap;\n\n  constructor (opts = {}, shouldValidateCaps = true) {\n    // `shell` overwrites adb.shell, so remove\n    delete opts.shell;\n\n    super(opts, shouldValidateCaps);\n    this.locatorStrategies = [\n      'xpath',\n      'id',\n      'class name',\n      'accessibility id',\n      'css selector',\n      '-android uiautomator'\n    ];\n    this.desiredCapConstraints = desiredCapConstraints;\n    this.uiautomator2 = null;\n    this.jwpProxyActive = false;\n    this.defaultIME = null;\n    this.jwpProxyAvoid = NO_PROXY;\n    this.apkStrings = {}; // map of language -> strings obj\n\n    this.settings = new DeviceSettings({ignoreUnimportantViews: false, allowInvisibleElements: false},\n        this.onSettingsUpdate.bind(this));\n    // handle webview mechanics from AndroidDriver\n    this.chromedriver = null;\n    this.sessionChromedrivers = {};\n\n    // memoize functions here, so that they are done on a per-instance basis\n    for (const fn of MEMOIZED_FUNCTIONS) {\n      this[fn] = _.memoize(this[fn]);\n    }\n  }\n\n  validateDesiredCaps (caps) {\n    return super.validateDesiredCaps(caps) && androidHelpers.validateDesiredCaps(caps);\n  }\n\n  async createSession (...args) {\n    try {\n      // TODO handle otherSessionData for multiple sessions\n      let [sessionId, caps] = await super.createSession(...args);\n\n      let serverDetails = {\n        platform: 'LINUX',\n        webStorageEnabled: false,\n        takesScreenshot: true,\n        javascriptEnabled: true,\n        databaseEnabled: false,\n        networkConnectionEnabled: true,\n        locationContextEnabled: false,\n        warnings: {},\n        desired: this.caps,\n      };\n\n      this.caps = Object.assign(serverDetails, this.caps);\n\n      this.curContext = this.defaultContextName();\n\n      let defaultOpts = {\n        fullReset: false,\n        autoLaunch: true,\n        adbPort: DEFAULT_ADB_PORT,\n        androidInstallTimeout: 90000\n      };\n      _.defaults(this.opts, defaultOpts);\n\n      if (this.isChromeSession) {\n        this.log.info(\"We're going to run a Chrome-based session\");\n        let {pkg, activity} = helpers.getChromePkg(this.opts.browserName);\n        this.opts.appPackage = this.caps.appPackage = pkg;\n        this.opts.appActivity = this.caps.appActivity = activity;\n        this.log.info(`Chrome-type package and activity are ${pkg} and ${activity}`);\n      }\n\n      if (this.opts.reboot) {\n        this.setAvdFromCapabilities(caps);\n      }\n\n      if (this.opts.app) {\n        // find and copy, or download and unzip an app url or path\n        this.opts.app = await this.helpers.configureApp(this.opts.app, [APK_EXTENSION, APKS_EXTENSION]);\n        await this.checkAppPresent();\n      } else if (this.opts.appPackage) {\n        // the app isn't an actual app file but rather something we want to\n        // assume is on the device and just launch via the appPackage\n        this.log.info(`Starting '${this.opts.appPackage}' directly on the device`);\n      } else {\n        this.log.info(`Neither 'app' nor 'appPackage' was set. Starting UiAutomator2 ` +\n          'without the target application');\n      }\n      this.opts.adbPort = this.opts.adbPort || DEFAULT_ADB_PORT;\n\n      await this.startUiAutomator2Session();\n      await this.fillDeviceDetails();\n      if (this.opts.mjpegScreenshotUrl) {\n        this.log.info(`Starting MJPEG stream reading URL: '${this.opts.mjpegScreenshotUrl}'`);\n        this.mjpegStream = new mjpeg.MJpegStream(this.opts.mjpegScreenshotUrl);\n        await this.mjpegStream.start();\n      }\n      return [sessionId, this.caps];\n    } catch (e) {\n      await this.deleteSession();\n      throw e;\n    }\n  }\n\n  async fillDeviceDetails () {\n    this.caps.pixelRatio = await this.getDevicePixelRatio();\n    this.caps.statBarHeight = await this.getStatusBarHeight();\n    this.caps.viewportRect = await this.getViewPortRect();\n  }\n\n  get driverData () {\n    // TODO fill out resource info here\n    return {};\n  }\n\n  async getSession () {\n    let sessionData = await super.getSession();\n    this.log.debug('Getting session details from server to mix in');\n    let uia2Data = await this.uiautomator2.jwproxy.command('/', 'GET', {});\n    return Object.assign({}, sessionData, uia2Data);\n  }\n\n  isEmulator () {\n    return helpers.isEmulator(this.adb, this.opts);\n  }\n\n  setAvdFromCapabilities (caps) {\n    if (this.opts.avd) {\n      this.log.info('avd name defined, ignoring device name and platform version');\n    } else {\n      if (!caps.deviceName) {\n        this.log.errorAndThrow('avd or deviceName should be specified when reboot option is enables');\n      }\n      if (!caps.platformVersion) {\n        this.log.errorAndThrow('avd or platformVersion should be specified when reboot option is enabled');\n      }\n      let avdDevice = caps.deviceName.replace(/[^a-zA-Z0-9_.]/g, '-');\n      this.opts.avd = `${avdDevice}__${caps.platformVersion}`;\n    }\n  }\n\n  async allocateSystemPort () {\n    const forwardPort = async (localPort) => {\n      this.log.debug(`Forwarding UiAutomator2 Server port ${DEVICE_PORT} to local port ${localPort}`);\n      if ((await checkPortStatus(localPort, LOCALHOST_IP4)) === 'open') {\n        this.log.errorAndThrow(`UiAutomator2 Server cannot start because the local port #${localPort} is busy. ` +\n          `Make sure the port you provide via 'systemPort' capability is not occupied. ` +\n          `This situation might often be a result of an inaccurate sessions management, e.g. ` +\n          `old automation sessions on the same device must always be closed before starting new ones.`);\n      }\n      await this.adb.forwardPort(localPort, DEVICE_PORT);\n    };\n\n    if (this.opts.systemPort) {\n      this._hasSystemPortInCaps = true;\n      return await forwardPort(this.opts.systemPort);\n    }\n\n    await DEVICE_PORT_ALLOCATION_GUARD(async () => {\n      const [startPort, endPort] = DEVICE_PORT_RANGE;\n      try {\n        this.opts.systemPort = await findAPortNotInUse(startPort, endPort);\n      } catch (e) {\n        this.log.errorAndThrow(\n          `Cannot find any free port in range ${startPort}..${endPort}}. ` +\n          `Please set the available port number by providing the systemPort capability or ` +\n          `double check the processes that are locking ports within this range and terminate ` +\n          `these which are not needed anymore`);\n      }\n      await forwardPort(this.opts.systemPort);\n    });\n  }\n\n  async releaseSystemPort () {\n    if (!this.opts.systemPort || !this.adb) {\n      return;\n    }\n\n    if (this._hasSystemPortInCaps) {\n      await this.adb.removePortForward(this.opts.systemPort);\n    } else {\n      await DEVICE_PORT_ALLOCATION_GUARD(async () => await this.adb.removePortForward(this.opts.systemPort));\n    }\n  }\n\n  async allocateMjpegServerPort () {\n    if (this.opts.mjpegServerPort) {\n      await this.adb.forwardPort(this.opts.mjpegServerPort, MJPEG_SERVER_DEVICE_PORT);\n    }\n  }\n\n  async releaseMjpegServerPort () {\n    if (this.opts.mjpegServerPort) {\n      await this.adb.removePortForward(this.opts.mjpegServerPort);\n    }\n  }\n\n  async startUiAutomator2Session () {\n    // get device udid for this session\n    let {udid, emPort} = await helpers.getDeviceInfoFromCaps(this.opts);\n    this.opts.udid = udid;\n    this.opts.emPort = emPort;\n\n    // now that we know our java version and device info, we can create our\n    // ADB instance\n    this.adb = await androidHelpers.createADB(this.opts);\n\n    const apiLevel = await this.adb.getApiLevel();\n\n    if (apiLevel < 21) {\n      this.log.errorAndThrow('UIAutomator2 is only supported since Android 5.0 (Lollipop). ' +\n        'You could still use other supported backends in order to automate older Android versions.');\n    }\n\n    if (apiLevel >= 28) { // Android P\n      this.log.info('Relaxing hidden api policy');\n      await this.adb.setHiddenApiPolicy('1', !!this.opts.ignoreHiddenApiPolicyError);\n    }\n\n    // check if we have to enable/disable gps before running the application\n    if (util.hasValue(this.opts.gpsEnabled)) {\n      if (this.isEmulator()) {\n        this.log.info(`Trying to ${this.opts.gpsEnabled ? 'enable' : 'disable'} gps location provider`);\n        await this.adb.toggleGPSLocationProvider(this.opts.gpsEnabled);\n      } else {\n        this.log.warn(`Sorry! 'gpsEnabled' capability is only available for emulators`);\n      }\n    }\n\n    // get appPackage et al from manifest if necessary\n    const appInfo = await helpers.getLaunchInfo(this.adb, this.opts);\n    // and get it onto our 'opts' object so we use it from now on\n    Object.assign(this.opts, appInfo || {});\n\n    // set actual device name, udid, platform version, screen size, screen density, model and manufacturer details\n    this.caps.deviceName = this.adb.curDeviceId;\n    this.caps.deviceUDID = this.opts.udid;\n\n    // start an avd, set the language/locale, pick an emulator, etc...\n    // TODO with multiple devices we'll need to parameterize this\n    this.defaultIME = await helpers.initDevice(this.adb, this.opts);\n\n    // Prepare the device by forwarding the UiAutomator2 port\n    // This call mutates this.opts.systemPort if it is not set explicitly\n    await this.allocateSystemPort();\n\n    // Prepare the device by forwarding the UiAutomator2 MJPEG server port (if\n    // applicable)\n    await this.allocateMjpegServerPort();\n\n    // set up the modified UiAutomator2 server etc\n    await this.initUiAutomator2Server();\n\n    // Should be after installing io.appium.settings in helpers.initDevice\n    if (this.opts.disableWindowAnimation && (await this.adb.getApiLevel() < 26)) { // API level 26 is Android 8.0.\n      // Granting android.permission.SET_ANIMATION_SCALE is necessary to handle animations under API level 26\n      // Read https://github.com/appium/appium/pull/11640#issuecomment-438260477\n      // `--no-window-animation` works over Android 8 to disable all of animations\n      if (await this.adb.isAnimationOn()) {\n        this.log.info('Disabling animation via io.appium.settings');\n        await this.adb.setAnimationState(false);\n        this._wasWindowAnimationDisabled = true;\n      } else {\n        this.log.info('Window animation is already disabled');\n      }\n    }\n\n    // set up app under test\n    // prepare our actual AUT, get it on the device, etc...\n    await this.initAUT();\n\n    // Adding AUT package name in the capabilities if package name not exist in caps\n    if (!this.caps.appPackage && appInfo) {\n      this.caps.appPackage = appInfo.appPackage;\n    }\n\n    // launch UiAutomator2 and wait till its online and we have a session\n    await this.uiautomator2.startSession(this.caps);\n\n    await this.addDeviceInfoToCaps();\n\n    // Unlock the device after the session is started.\n    if (!this.opts.skipUnlock) {\n      // unlock the device to prepare it for testing\n      await helpers.unlock(this, this.adb, this.caps);\n    } else {\n      this.log.debug(`'skipUnlock' capability set, so skipping device unlock`);\n    }\n\n    if (this.isChromeSession) { // start a chromedriver session\n      await this.startChromeSession(this);\n    } else if (this.opts.autoLaunch && this.opts.appPackage) {\n      await this.ensureAppStarts();\n    }\n\n    // if the initial orientation is requested, set it\n    if (util.hasValue(this.opts.orientation)) {\n      this.log.debug(`Setting initial orientation to '${this.opts.orientation}'`);\n      await this.setOrientation(this.opts.orientation);\n    }\n\n    // if we want to immediately get into a webview, set our context\n    // appropriately\n    if (this.opts.autoWebview) {\n      const viewName = this.defaultWebviewName();\n      const timeout = this.opts.autoWebviewTimeout || 2000;\n      this.log.info(`Setting auto webview to context '${viewName}' with timeout ${timeout}ms`);\n      await retryInterval(timeout / 500, 500, this.setContext.bind(this), viewName);\n    }\n\n    // now that everything has started successfully, turn on proxying so all\n    // subsequent session requests go straight to/from uiautomator2\n    this.jwpProxyActive = true;\n  }\n\n  async addDeviceInfoToCaps () {\n    const {\n      apiVersion,\n      platformVersion,\n      manufacturer,\n      model,\n      realDisplaySize,\n      displayDensity,\n    } = await this.mobileGetDeviceInfo();\n    this.caps.deviceApiLevel = parseInt(apiVersion, 10);\n    this.caps.platformVersion = platformVersion;\n    this.caps.deviceScreenSize = realDisplaySize;\n    this.caps.deviceScreenDensity = displayDensity;\n    this.caps.deviceModel = model;\n    this.caps.deviceManufacturer = manufacturer;\n  }\n\n  async initUiAutomator2Server () {\n    // broken out for readability\n    const uiautomator2Opts = {\n      host: this.opts.remoteAdbHost || this.opts.host || LOCALHOST_IP4,\n      systemPort: this.opts.systemPort,\n      devicePort: DEVICE_PORT,\n      adb: this.adb,\n      apk: this.opts.app,\n      tmpDir: this.opts.tmpDir,\n      appPackage: this.opts.appPackage,\n      appActivity: this.opts.appActivity,\n      disableWindowAnimation: !!this.opts.disableWindowAnimation,\n      disableSuppressAccessibilityService: this.opts.disableSuppressAccessibilityService,\n      readTimeout: this.opts.uiautomator2ServerReadTimeout,\n    };\n    // now that we have package and activity, we can create an instance of\n    // uiautomator2 with the appropriate options\n    this.uiautomator2 = new UiAutomator2Server(this.log, uiautomator2Opts);\n    this.proxyReqRes = this.uiautomator2.proxyReqRes.bind(this.uiautomator2);\n    this.proxyCommand = this.uiautomator2.proxyCommand.bind(this.uiautomator2);\n\n    if (this.opts.skipServerInstallation) {\n      this.log.info(`'skipServerInstallation' is set. Skipping UIAutomator2 server installation.`);\n    } else {\n      await this.uiautomator2.installServerApk(this.opts.uiautomator2ServerInstallTimeout);\n      try {\n        await this.adb.addToDeviceIdleWhitelist(\n          SETTINGS_HELPER_PKG_ID, SERVER_PACKAGE_ID, SERVER_TEST_PACKAGE_ID,\n        );\n      } catch (e) {\n        this.log.warn(`Cannot add server packages to the Doze whitelist. Original error: ` +\n          (e.stderr || e.message));\n      }\n    }\n  }\n\n  async initAUT () {\n    // Uninstall any uninstallOtherPackages which were specified in caps\n    if (this.opts.uninstallOtherPackages) {\n      await helpers.uninstallOtherPackages(\n        this.adb,\n        helpers.parseArray(this.opts.uninstallOtherPackages),\n        [SETTINGS_HELPER_PKG_ID, SERVER_PACKAGE_ID, SERVER_TEST_PACKAGE_ID]\n      );\n    }\n\n    // Install any \"otherApps\" that were specified in caps\n    if (this.opts.otherApps) {\n      let otherApps;\n      try {\n        otherApps = helpers.parseArray(this.opts.otherApps);\n      } catch (e) {\n        this.log.errorAndThrow(`Could not parse \"otherApps\" capability: ${e.message}`);\n      }\n      otherApps = await B.all(otherApps\n        .map((app) => this.helpers.configureApp(app, [APK_EXTENSION, APKS_EXTENSION])));\n      await helpers.installOtherApks(otherApps, this.adb, this.opts);\n    }\n\n    if (this.opts.app) {\n      if (this.opts.noReset && !(await this.adb.isAppInstalled(this.opts.appPackage))\n          || !this.opts.noReset) {\n        if (!this.opts.noSign && !await this.adb.checkApkCert(this.opts.app, this.opts.appPackage, {\n          requireDefaultCert: false,\n        })) {\n          await helpers.signApp(this.adb, this.opts.app);\n        }\n        if (!this.opts.skipUninstall) {\n          await this.adb.uninstallApk(this.opts.appPackage);\n        }\n        await helpers.installApk(this.adb, this.opts);\n      } else {\n        this.log.debug('noReset has been requested and the app is already installed. Doing nothing');\n      }\n    } else {\n      if (this.opts.fullReset) {\n        this.log.errorAndThrow('Full reset requires an app capability, use fastReset if app is not provided');\n      }\n      this.log.debug('No app capability. Assuming it is already on the device');\n      if (this.opts.fastReset && this.opts.appPackage) {\n        await helpers.resetApp(this.adb, this.opts);\n      }\n    }\n  }\n\n  async ensureAppStarts () {\n    // make sure we have an activity and package to wait for\n    const appWaitPackage = this.opts.appWaitPackage || this.opts.appPackage;\n    const appWaitActivity = this.opts.appWaitActivity || this.opts.appActivity;\n\n    this.log.info(`Starting '${this.opts.appPackage}/${this.opts.appActivity} ` +\n      `and waiting for '${appWaitPackage}/${appWaitActivity}'`);\n\n    if (this.caps.androidCoverage) {\n      this.log.info(`androidCoverage is configured. ` +\n        ` Starting instrumentation of '${this.caps.androidCoverage}'...`);\n      await this.adb.androidCoverage(this.caps.androidCoverage, appWaitPackage, appWaitActivity);\n      return;\n    }\n    if (this.opts.noReset && !this.opts.forceAppLaunch\n        && await this.adb.processExists(this.opts.appPackage)) {\n      this.log.info(`'${this.opts.appPackage}' is already running and noReset is enabled. ` +\n        `Set forceAppLaunch capability to true if the app must be forcefully restarted on session startup.`);\n      return;\n    }\n    await this.adb.startApp({\n      pkg: this.opts.appPackage,\n      activity: this.opts.appActivity,\n      action: this.opts.intentAction || 'android.intent.action.MAIN',\n      category: this.opts.intentCategory || 'android.intent.category.LAUNCHER',\n      flags: this.opts.intentFlags || '0x10200000', // FLAG_ACTIVITY_NEW_TASK | FLAG_ACTIVITY_RESET_TASK_IF_NEEDED\n      waitPkg: this.opts.appWaitPackage,\n      waitActivity: this.opts.appWaitActivity,\n      waitForLaunch: this.opts.appWaitForLaunch,\n      waitDuration: this.opts.appWaitDuration,\n      optionalIntentArguments: this.opts.optionalIntentArguments,\n      stopApp: this.opts.forceAppLaunch || !this.opts.dontStopAppOnReset,\n      retry: true,\n      user: this.opts.userProfile,\n    });\n  }\n\n  async deleteSession () {\n    this.log.debug('Deleting UiAutomator2 session');\n\n    const screenRecordingStopTasks = [async () => {\n      if (!_.isEmpty(this._screenRecordingProperties)) {\n        await this.stopRecordingScreen();\n      }\n    }, async () => {\n      if (await this.mobileIsMediaProjectionRecordingRunning()) {\n        await this.mobileStopMediaProjectionRecording();\n      }\n    }, async () => {\n      if (!_.isEmpty(this._screenStreamingProps)) {\n        await this.mobileStopScreenStreaming();\n      }\n    }];\n\n    await androidHelpers.removeAllSessionWebSocketHandlers(this.server, this.sessionId);\n\n    if (this.uiautomator2) {\n      try {\n        await this.stopChromedriverProxies();\n      } catch (err) {\n        this.log.warn(`Unable to stop ChromeDriver proxies: ${err.message}`);\n      }\n      if (this.jwpProxyActive) {\n        try {\n          await this.uiautomator2.deleteSession();\n        } catch (err) {\n          this.log.warn(`Unable to proxy deleteSession to UiAutomator2: ${err.message}`);\n        }\n      }\n      this.uiautomator2 = null;\n    }\n    this.jwpProxyActive = false;\n\n    if (this.adb) {\n      await B.all(screenRecordingStopTasks.map((task) => {\n        (async () => {\n          try {\n            await task();\n          } catch (ign) {}\n        })();\n      }));\n\n      if (this.opts.unicodeKeyboard && this.opts.resetKeyboard && this.defaultIME) {\n        this.log.debug(`Resetting IME to '${this.defaultIME}'`);\n        try {\n          await this.adb.setIME(this.defaultIME);\n        } catch (err) {\n          this.log.warn(`Unable to reset IME: ${err.message}`);\n        }\n      }\n      if (this.caps.androidCoverage) {\n        this.log.info('Shutting down the adb process of instrumentation...');\n        await this.adb.endAndroidCoverage();\n        // Use this broadcast intent to notify it's time to dump coverage to file\n        if (this.caps.androidCoverageEndIntent) {\n          this.log.info(`Sending intent broadcast '${this.caps.androidCoverageEndIntent}' at the end of instrumenting.`);\n          await this.adb.broadcast(this.caps.androidCoverageEndIntent);\n        } else {\n          this.log.warn('No androidCoverageEndIntent is configured in caps. Possibly you cannot get coverage file.');\n        }\n      }\n      if (this.opts.appPackage) {\n        if (!this.isChromeSession\n            && !this.opts.dontStopAppOnReset\n            && !this.opts.noReset) {\n          try {\n            await this.adb.forceStop(this.opts.appPackage);\n          } catch (err) {\n            this.log.warn(`Unable to force stop app: ${err.message}`);\n          }\n        }\n        if (this.opts.fullReset && !this.opts.skipUninstall) {\n          this.log.debug(`Capability 'fullReset' set to 'true', Uninstalling '${this.opts.appPackage}'`);\n          try {\n            await this.adb.uninstallApk(this.opts.appPackage);\n          } catch (err) {\n            this.log.warn(`Unable to uninstall app: ${err.message}`);\n          }\n        }\n      }\n      // This value can be true if test target device is <= 26\n      if (this._wasWindowAnimationDisabled) {\n        this.log.info('Restoring window animation state');\n        await this.adb.setAnimationState(true);\n      }\n      await this.adb.stopLogcat();\n      try {\n        await this.releaseSystemPort();\n      } catch (error) {\n        this.log.warn(`Unable to remove system port forward: ${error.message}`);\n        // Ignore, this block will also be called when we fall in catch block\n        // and before even port forward.\n      }\n      try {\n        await this.releaseMjpegServerPort();\n      } catch (error) {\n        this.log.warn(`Unable to remove MJPEG server port forward: ${error.message}`);\n        // Ignore, this block will also be called when we fall in catch block\n        // and before even port forward.\n      }\n\n      if (await this.adb.getApiLevel() >= 28) { // Android P\n        this.log.info('Restoring hidden api policy to the device default configuration');\n        await this.adb.setDefaultHiddenApiPolicy(!!this.opts.ignoreHiddenApiPolicyError);\n      }\n\n      if (this.opts.reboot) {\n        let avdName = this.opts.avd.replace('@', '');\n        this.log.debug(`Closing emulator '${avdName}'`);\n        try {\n          await this.adb.killEmulator(avdName);\n        } catch (err) {\n          this.log.warn(`Unable to close emulator: ${err.message}`);\n        }\n      }\n    }\n    if (this.mjpegStream) {\n      this.log.info('Closing MJPEG stream');\n      this.mjpegStream.stop();\n    }\n    await super.deleteSession();\n  }\n\n  async checkAppPresent () {\n    this.log.debug('Checking whether app is actually present');\n    if (!(await fs.exists(this.opts.app))) {\n      this.log.errorAndThrow(`Could not find app apk at '${this.opts.app}'`);\n    }\n  }\n\n  async onSettingsUpdate () {\n    // intentionally do nothing here, since commands.updateSettings proxies\n    // settings to the uiauto2 server already\n  }\n\n  // Need to override android-driver's version of this since we don't actually\n  // have a bootstrap; instead we just restart adb and re-forward the UiAutomator2\n  // port\n  async wrapBootstrapDisconnect (wrapped) {\n    await wrapped();\n    await this.adb.restart();\n    await this.allocateSystemPort();\n    await this.allocateMjpegServerPort();\n  }\n\n  proxyActive (sessionId) {\n    super.proxyActive(sessionId);\n\n    // we always have an active proxy to the UiAutomator2 server\n    return true;\n  }\n\n  canProxy (sessionId) {\n    super.canProxy(sessionId);\n\n    // we can always proxy to the uiautomator2 server\n    return true;\n  }\n\n  getProxyAvoidList (sessionId) {\n    super.getProxyAvoidList(sessionId);\n    // we are maintaining two sets of NO_PROXY lists, one for chromedriver(CHROME_NO_PROXY)\n    // and one for uiautomator2(NO_PROXY), based on current context will return related NO_PROXY list\n    if (util.hasValue(this.chromedriver)) {\n      // if the current context is webview(chromedriver), then return CHROME_NO_PROXY list\n      this.jwpProxyAvoid = CHROME_NO_PROXY;\n    } else {\n      this.jwpProxyAvoid = NO_PROXY;\n    }\n    if (this.opts.nativeWebScreenshot) {\n      this.jwpProxyAvoid = [...this.jwpProxyAvoid, ['GET', new RegExp('^/session/[^/]+/screenshot')]];\n    }\n\n    return this.jwpProxyAvoid;\n  }\n\n  get isChromeSession () {\n    return helpers.isChromeBrowser(this.opts.browserName);\n  }\n}\n\n// first add the android-driver commands which we will fall back to\nfor (let [cmd, fn] of _.toPairs(androidCommands)) {\n  AndroidUiautomator2Driver.prototype[cmd] = fn;\n}\n\n// then overwrite with any uiautomator2-specific commands\nfor (let [cmd, fn] of _.toPairs(commands)) {\n  AndroidUiautomator2Driver.prototype[cmd] = fn;\n}\n\nexport { AndroidUiautomator2Driver };\nexport default AndroidUiautomator2Driver;\n"],"mappings":"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"}